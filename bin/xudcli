#!/usr/bin/env node
/* eslint-disable no-console */

const XudClient = require('../lib/xudclient/XudClient');
const commandLineArgs = require('command-line-args');

const argDefinitions = [
  {
    name: 'rpcport', alias: 'r', type: Number, defaultValue: 8886,
  },
  { name: 'call', type: String, defaultOption: true },
  { name: 'quantity', type: Number },
  { name: 'price', type: Number },
  { name: 'host', type: String },
  { name: 'port', type: Number },
];
const args = commandLineArgs(argDefinitions);

const xudClient = new XudClient(args.rpcport);

let promise;
switch (args.call) {
  case 'getinfo':
    promise = xudClient.getInfo();
    break;
  case 'getorders':
    promise = xudClient.getOrders();
    break;
  case 'placeorder': {
    const order = {
      price: args.price,
      quantity: args.quantity,
    };
    promise = xudClient.placeOrder(order);
    break;
  }
  case 'connect': {
    promise = xudClient.connect(args.host, args.port);
    break;
  }
  default:
    console.error(`${args.call} not recognized as a call`);
}

if (promise) {
  promise.then((result) => {
    console.log(JSON.stringify(result));
  }).catch((err) => {
    console.error(err);
  });
}
