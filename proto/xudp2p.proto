syntax = "proto3";

package xudp2p;

message Address {
    string host = 1 [json_name = "host"];
    int32 port = 2 [json_name = "port"];
}

message Order {
    string id = 1 [json_name = "id"];
    string pairId = 2 [json_name = "pair_id"];
    double price = 3 [json_name = "price"];
    double quantity = 4 [json_name = "quantity"];
    bool isBuy = 5 [json_name = "is_buy"];
}

message Node {
    string nodePubKey = 1 [json_name = "node_pub_key"];
    repeated Address addresses = 2 [json_name = "addresses"];
}

message NodeState {
    string nodePubKey = 1 [json_name = "node_pub_key"];
    string version = 2 [json_name = "version"];
    repeated Address addresses = 3 [json_name = "addresses"];
    repeated string pairs = 4 [json_name = "pairs"];
    string raidenAddress = 5 [json_name = "raiden_address"];
    string lndBtcPubKey = 6 [json_name = "lnd_btc_pub_key"];
    string lndLtcPubKey = 7 [json_name = "lnd_ltc_pub_key"];
}

message PingPacket {
    string id = 1 [json_name = "id"];
}

message PongPacket {
    string id = 1 [json_name = "id"];
    string reqId = 2 [json_name = "req_id"];
}

message OrderPacket {
    string id = 1 [json_name = "id"];
    string hash = 2 [json_name = "hash"];
    Order order = 3 [json_name = "order"];
}

message OrderInvalidationPacket {
    string id = 1 [json_name = "id"];
    string hash = 2 [json_name = "hash"];
    string order_id = 3 [json_name = "order_id"];
    string pairId = 4 [json_name = "pair_id"];
    double quantity = 5 [json_name = "quantity"];
}

message GetOrdersPacket {
    string id = 1 [json_name = "id"];
    string hash = 2 [json_name = "hash"];
    repeated string pairIds = 3 [json_name = "pair_ids"];
}

message OrdersPacket {
    string id = 1 [json_name = "id"];
    string reqId = 2 [json_name = "req_id"];
    string hash = 3 [json_name = "hash"];
    repeated Order orders = 4 [json_name = "orders"];
}

message NodeStateUpdatePacket {
    string id = 1 [json_name = "id"];
    string hash = 2 [json_name = "hash"];
    NodeState nodeState = 3 [json_name = "node_state"];
}

message HelloRequestPacket {
    string id = 1 [json_name = "id"];
    string hash = 2 [json_name = "hash"];
    string sign = 3 [json_name = "sign"];
    string ephemeralPubKey = 4 [json_name = "ephemeral_pub_key"];
    string peerPubKey = 5 [json_name = "peer_pub_key"];
    NodeState nodeState = 6 [json_name = "node_state"];
}

message HelloResponsePacket {
    string id = 1 [json_name = "id"];
    string reqId = 2 [json_name = "req_id"];
    string hash = 3 [json_name = "hash"];
    string sign = 4 [json_name = "sign"];
    string peerPubKey = 5 [json_name = "peer_pub_key"];
    NodeState nodeState = 6 [json_name = "node_state"];
}

message DisconnectingPacket {
    string id = 1 [json_name = "id"];
    string hash = 2 [json_name = "hash"];
    int32 reason = 3 [json_name = "reason"];
    string payload = 4 [json_name = "payload"];
}

message GetNodesPacket {
    string id = 1 [json_name = "id"];
}

message NodesPacket {
    string id = 1 [json_name = "id"];
    string reqId = 2 [json_name = "req_id"];
    string hash = 3 [json_name = "hash"];
    repeated Node nodes = 4 [json_name = "nodes"];
}

message SwapRequestPacket {
    string id = 1 [json_name = "id"];
    string hash = 2 [json_name = "hash"];
    double proposedQuantity = 3 [json_name = "proposed_quantity"];
    string pairId = 4 [json_name = "pair_id"];
    string orderId = 5 [json_name = "order_id"];
    string rHash = 6 [json_name = "r_hash"];
    int32 takerCltvDelta = 7 [json_name = "taker_cltv_delta"];
}

message SwapAcceptedPacket {
    string id = 1 [json_name = "id"];
    string reqId = 2 [json_name = "req_id"];
    string hash = 3 [json_name = "hash"];
    string rHash = 4 [json_name = "r_hash"];
    double quantity = 5 [json_name = "quantity"];
    int32 makerCltvDelta = 6 [json_name = "maker_cltv_delta"];
}

message SwapCompletePacket {
    string id = 1 [json_name = "id"];
    string reqId = 2 [json_name = "req_id"];
    string hash = 3 [json_name = "hash"];
    string rHash = 4 [json_name = "r_hash"];
}

message SwapFailedPacket {
    string id = 1 [json_name = "id"];
    string reqId = 2 [json_name = "req_id"];
    string hash = 3 [json_name = "hash"];
    string rHash = 4 [json_name = "r_hash"];
    string errorMessage = 5 [json_name = "error_message"];
}
