import { Arguments } from 'yargs';
import { GetMnemonicRequest, GetMnemonicResponse } from '../../proto/xudrpc_pb';
import { callback, loadXudClient } from '../command';
import { showSeed } from '../utils';

const formatOutput = (response: GetMnemonicResponse.AsObject) => {
  const { seedMnemonicList } = response;

  showSeed(seedMnemonicList);

  // The mnemonic won't be the same as was returned for the `xucli create` call.
  // xud uses aezeed which is salted with random bytes, xud does not store the
  // salt or the mnemonic words. Each time xud regenerates the mnemonic, it
  // uses a new salt so that the mnemonic is different.
  console.log(`
Note that this mnemonic changes each time it is regenerated by xud, but it \
still restores the same xud node key and underlying wallets.
`);
};

export const command = 'getmnemonic';

export const describe = 'show the master xud seed mnemonic';

export const handler = async (argv: Arguments) => {
  (await loadXudClient(argv)).getMnemonic(new GetMnemonicRequest(), callback(argv, formatOutput));
};
