{
  "swagger": "2.0",
  "info": {
    "title": "xudrpc.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/addcurrency": {
      "post": {
        "summary": "Add a currency to the list of supported currencies.",
        "operationId": "AddCurrency",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/xudrpcAddCurrencyResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/xudrpcAddCurrencyRequest"
            }
          }
        ],
        "tags": [
          "Xud"
        ]
      }
    },
    "/v1/addpair": {
      "post": {
        "summary": "Add a trading pair to the list of supported trading pairs.",
        "operationId": "AddPair",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/xudrpcAddPairResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/xudrpcAddPairRequest"
            }
          }
        ],
        "tags": [
          "Xud"
        ]
      }
    },
    "/v1/cancelorder": {
      "post": {
        "summary": "Cancel placed order from the orderbook.",
        "operationId": "CancelOrder",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/xudrpcCancelOrderResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/xudrpcCancelOrderRequest"
            }
          }
        ],
        "tags": [
          "Xud"
        ]
      }
    },
    "/v1/channelbalance": {
      "get": {
        "summary": "Get the total balance available across all channels for a given currency.",
        "operationId": "ChannelBalance",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/xudrpcChannelBalanceResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "currency",
            "description": "The ticker symbol of the currency to query for.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Xud"
        ]
      }
    },
    "/v1/connect": {
      "post": {
        "summary": "Connect to an XU node.",
        "operationId": "Connect",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/xudrpcConnectResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/xudrpcConnectRequest"
            }
          }
        ],
        "tags": [
          "Xud"
        ]
      }
    },
    "/v1/currencies": {
      "get": {
        "summary": "Get the list of the order book's supported currencies.",
        "operationId": "ListCurrencies",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/xudrpcListCurrenciesResponse"
            }
          }
        },
        "tags": [
          "Xud"
        ]
      }
    },
    "/v1/disconnect": {
      "post": {
        "summary": "Disconnect from a connected peer XU node.",
        "operationId": "Disconnect",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/xudrpcDisconnectResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/xudrpcDisconnectRequest"
            }
          }
        ],
        "tags": [
          "Xud"
        ]
      }
    },
    "/v1/executeswap": {
      "post": {
        "summary": "Execute an atomic swap",
        "operationId": "ExecuteSwap",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/xudrpcExecuteSwapResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/xudrpcExecuteSwapRequest"
            }
          }
        ],
        "tags": [
          "Xud"
        ]
      }
    },
    "/v1/info": {
      "get": {
        "summary": "Get general information about this Exchange Union node.",
        "operationId": "GetInfo",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/xudrpcGetInfoResponse"
            }
          }
        },
        "tags": [
          "Xud"
        ]
      }
    },
    "/v1/orders": {
      "get": {
        "summary": "Get a list of standing orders from the order book.",
        "operationId": "GetOrders",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/xudrpcGetOrdersResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "pair_id",
            "description": "The trading pair for which to retrieve orders.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "max_results",
            "description": "The maximum number of orders to return from either side of the order book.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "Xud"
        ]
      }
    },
    "/v1/pairs": {
      "get": {
        "summary": "Get the list of the order book's suported trading pairs.",
        "operationId": "ListPairs",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/xudrpcListPairsResponse"
            }
          }
        },
        "tags": [
          "Xud"
        ]
      }
    },
    "/v1/peers": {
      "get": {
        "summary": "Get a list of connected peers.",
        "operationId": "ListPeers",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/xudrpcListPeersResponse"
            }
          }
        },
        "tags": [
          "Xud"
        ]
      }
    },
    "/v1/placeorder": {
      "post": {
        "summary": "Add an order to the order book.\nIf price is zero or unspecified a market order will get added.",
        "operationId": "PlaceOrder",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/xudrpcPlaceOrderResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/xudrpcPlaceOrderRequest"
            }
          }
        ],
        "tags": [
          "Xud"
        ]
      }
    },
    "/v1/removecurrency": {
      "post": {
        "summary": "Remove a currency.",
        "operationId": "RemoveCurrency",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/xudrpcRemoveCurrencyResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/xudrpcRemoveCurrencyRequest"
            }
          }
        ],
        "tags": [
          "Xud"
        ]
      }
    },
    "/v1/removepair": {
      "post": {
        "summary": "Remove a trading pair.",
        "operationId": "RemovePair",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/xudrpcRemovePairResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/xudrpcRemovePairRequest"
            }
          }
        ],
        "tags": [
          "Xud"
        ]
      }
    },
    "/v1/shutdown": {
      "post": {
        "summary": "Begin shutting down xud.",
        "operationId": "Shutdown",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/xudrpcShutdownResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/xudrpcShutdownRequest"
            }
          }
        ],
        "tags": [
          "Xud"
        ]
      }
    },
    "/v1/subscribepeerorders": {
      "get": {
        "summary": "Subscribe to peer order events.",
        "operationId": "SubscribePeerOrders",
        "responses": {
          "200": {
            "description": "(streaming responses)",
            "schema": {
              "$ref": "#/definitions/xudrpcSubscribePeerOrdersResponse"
            }
          }
        },
        "tags": [
          "Xud"
        ]
      }
    },
    "/v1/subscribeswaps": {
      "get": {
        "summary": "Subscribe executed swaps.",
        "operationId": "SubscribeSwaps",
        "responses": {
          "200": {
            "description": "(streaming responses)",
            "schema": {
              "$ref": "#/definitions/xudrpcSubscribeSwapsResponse"
            }
          }
        },
        "tags": [
          "Xud"
        ]
      }
    }
  },
  "definitions": {
    "AddCurrencyRequestSwapClient": {
      "type": "string",
      "enum": [
        "LND",
        "RAIDEN"
      ],
      "default": "LND"
    },
    "xudrpcAddCurrencyRequest": {
      "type": "object",
      "properties": {
        "currency": {
          "type": "string",
          "description": "The ticker symbol for this currency such as BTC, LTC, ETH, etc..."
        },
        "swap_client": {
          "$ref": "#/definitions/AddCurrencyRequestSwapClient",
          "title": "The payment channel network client to use for executing swaps"
        },
        "token_address": {
          "type": "string",
          "title": "The contract address for layered tokens such as ERC20"
        },
        "decimal_places": {
          "type": "integer",
          "format": "int64",
          "description": "The number of places to the right of the decimal point of the smallest subunit of the currency. For example, BTC, LTC, and others\nwhere the smallest subunits (satoshis) are 0.00000001 full units (bitcoins) have 8 decimal places. ETH has 18. This can be thought\nof as the base 10 exponent of the smallest subunit expressed as a positive integer. A default value of 8 is used if unspecified."
        }
      }
    },
    "xudrpcAddCurrencyResponse": {
      "type": "object"
    },
    "xudrpcAddPairRequest": {
      "type": "object",
      "properties": {
        "base_currency": {
          "type": "string",
          "title": "The base currency that is bought and sold for this trading pair"
        },
        "quote_currency": {
          "type": "string",
          "title": "The currency used to quote a price for the base currency"
        }
      }
    },
    "xudrpcAddPairResponse": {
      "type": "object"
    },
    "xudrpcCancelOrderRequest": {
      "type": "object",
      "properties": {
        "order_id": {
          "type": "string",
          "title": "The local id of the order to cancel"
        },
        "pair_id": {
          "type": "string",
          "title": "The trading pair that the order to cancel is for"
        }
      }
    },
    "xudrpcCancelOrderResponse": {
      "type": "object"
    },
    "xudrpcChannelBalanceResponse": {
      "type": "object",
      "properties": {
        "balance": {
          "type": "string",
          "format": "int64",
          "title": "Sum of channels balances denominated in satoshis or equivalent"
        },
        "pending_open_balance": {
          "type": "string",
          "format": "int64",
          "title": "Sum of channels pending balances denominated in satoshis or equivalent"
        }
      }
    },
    "xudrpcConnectRequest": {
      "type": "object",
      "properties": {
        "node_uri": {
          "type": "string"
        }
      }
    },
    "xudrpcConnectResponse": {
      "type": "object"
    },
    "xudrpcDisconnectRequest": {
      "type": "object",
      "properties": {
        "node_pub_key": {
          "type": "string"
        }
      }
    },
    "xudrpcDisconnectResponse": {
      "type": "object"
    },
    "xudrpcExecuteSwapRequest": {
      "type": "object",
      "properties": {
        "target_address": {
          "type": "string"
        },
        "payload": {
          "$ref": "#/definitions/xudrpcSwapPayload"
        }
      }
    },
    "xudrpcExecuteSwapResponse": {
      "type": "object",
      "properties": {
        "result": {
          "type": "string"
        }
      }
    },
    "xudrpcGetInfoResponse": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string"
        },
        "node_pub_key": {
          "type": "string"
        },
        "uris": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "num_peers": {
          "type": "integer",
          "format": "int32"
        },
        "num_pairs": {
          "type": "integer",
          "format": "int32"
        },
        "orders": {
          "$ref": "#/definitions/xudrpcOrdersCount"
        },
        "lndbtc": {
          "$ref": "#/definitions/xudrpcLndInfo"
        },
        "lndltc": {
          "$ref": "#/definitions/xudrpcLndInfo"
        },
        "raiden": {
          "$ref": "#/definitions/xudrpcRaidenInfo"
        }
      }
    },
    "xudrpcGetOrdersResponse": {
      "type": "object",
      "properties": {
        "peer_orders": {
          "$ref": "#/definitions/xudrpcOrders",
          "title": "A list of peer orders"
        },
        "own_orders": {
          "$ref": "#/definitions/xudrpcOrders",
          "title": "A list of orders placed locally"
        }
      }
    },
    "xudrpcListCurrenciesResponse": {
      "type": "object",
      "properties": {
        "currencies": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The ticker symbols of supported currencies"
        }
      }
    },
    "xudrpcListPairsResponse": {
      "type": "object",
      "properties": {
        "pairs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The supported trading pair tickers in formats like \"LTC/BTC\""
        }
      }
    },
    "xudrpcListPeersResponse": {
      "type": "object",
      "properties": {
        "peers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/xudrpcPeer"
          }
        }
      }
    },
    "xudrpcLndChannels": {
      "type": "object",
      "properties": {
        "active": {
          "type": "integer",
          "format": "int32"
        },
        "inactive": {
          "type": "integer",
          "format": "int32"
        },
        "pending": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "xudrpcLndInfo": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "channels": {
          "$ref": "#/definitions/xudrpcLndChannels"
        },
        "chains": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "blockheight": {
          "type": "integer",
          "format": "int32"
        },
        "uris": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "version": {
          "type": "string"
        }
      }
    },
    "xudrpcOrder": {
      "type": "object",
      "properties": {
        "price": {
          "type": "number",
          "format": "double",
          "description": "The price of the order, precise to 6 decimal places."
        },
        "quantity": {
          "type": "number",
          "format": "double",
          "description": "The quantity of the order, precise to 6 decimal places."
        },
        "pair_id": {
          "type": "string",
          "title": "The trading pair that this order is for"
        },
        "peer_pub_key": {
          "type": "string",
          "title": "The node pub key of the peer that created this order"
        },
        "id": {
          "type": "string",
          "title": "A UUID for this order"
        },
        "local_id": {
          "type": "string",
          "title": "The local id for this order"
        },
        "created_at": {
          "type": "string",
          "format": "int64",
          "title": "The epoch time when this order was created"
        },
        "invoice": {
          "type": "string",
          "title": "Lightning invoice"
        },
        "canceled": {
          "type": "boolean",
          "format": "boolean",
          "title": "Indicates whether an order was canceled"
        }
      }
    },
    "xudrpcOrderMatch": {
      "type": "object",
      "properties": {
        "maker": {
          "$ref": "#/definitions/xudrpcOrder"
        },
        "taker": {
          "$ref": "#/definitions/xudrpcOrder"
        }
      }
    },
    "xudrpcOrders": {
      "type": "object",
      "properties": {
        "buy_orders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/xudrpcOrder"
          },
          "title": "A list of buy orders sorted by descending price"
        },
        "sell_orders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/xudrpcOrder"
          },
          "title": "A list of sell orders sorted by ascending price"
        }
      }
    },
    "xudrpcOrdersCount": {
      "type": "object",
      "properties": {
        "peer": {
          "type": "integer",
          "format": "int32"
        },
        "own": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "xudrpcPeer": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "title": "The socket address with host and port for this peer"
        },
        "node_pub_key": {
          "type": "string",
          "title": "The node pub key to uniquely identify this peer"
        },
        "inbound": {
          "type": "boolean",
          "format": "boolean",
          "title": "Indicates whether this peer was connected inbound"
        },
        "pairs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "A list of trading pair tickers supported by this peer"
        },
        "xud_version": {
          "type": "string",
          "title": "The version of xud being used by the peer"
        },
        "seconds_connected": {
          "type": "integer",
          "format": "int32",
          "title": "The time in seconds that we have been connected to this peer"
        }
      }
    },
    "xudrpcPlaceOrderRequest": {
      "type": "object",
      "properties": {
        "price": {
          "type": "number",
          "format": "double",
          "description": "The price of the order, precise to 6 decimal places."
        },
        "quantity": {
          "type": "number",
          "format": "double",
          "description": "The quantity of the order, precise to 6 decimal places."
        },
        "pair_id": {
          "type": "string",
          "title": "The trading pair that the order is for"
        },
        "order_id": {
          "type": "string",
          "title": "The local id to assign to the order"
        }
      }
    },
    "xudrpcPlaceOrderResponse": {
      "type": "object",
      "properties": {
        "matches": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/xudrpcOrderMatch"
          },
          "title": "A list of orders matching the newly placed order"
        },
        "remaining_order": {
          "$ref": "#/definitions/xudrpcOrder",
          "title": "The remaining portion of the order, after matches, that enters the order book"
        }
      }
    },
    "xudrpcRaidenInfo": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "channels": {
          "type": "integer",
          "format": "int32"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "xudrpcRemoveCurrencyRequest": {
      "type": "object",
      "properties": {
        "currency": {
          "type": "string",
          "description": "The ticker symbol for this currency such as BTC, LTC, ETH, etc..."
        }
      }
    },
    "xudrpcRemoveCurrencyResponse": {
      "type": "object"
    },
    "xudrpcRemovePairRequest": {
      "type": "object",
      "properties": {
        "pair_id": {
          "type": "string",
          "title": "The trading pair ticker to remove, such as \"LTC/BTC\""
        }
      }
    },
    "xudrpcRemovePairResponse": {
      "type": "object"
    },
    "xudrpcShutdownRequest": {
      "type": "object"
    },
    "xudrpcShutdownResponse": {
      "type": "object"
    },
    "xudrpcSubscribePeerOrdersResponse": {
      "type": "object",
      "properties": {
        "order": {
          "$ref": "#/definitions/xudrpcOrder"
        }
      }
    },
    "xudrpcSubscribeSwapsResponse": {
      "type": "object",
      "properties": {
        "order": {
          "type": "string",
          "title": "The order which was executed for the swap with updated remaining quantity"
        }
      }
    },
    "xudrpcSwapPayload": {
      "type": "object",
      "properties": {
        "role": {
          "type": "string"
        },
        "sending_amount": {
          "type": "string",
          "format": "uint64"
        },
        "sending_token": {
          "type": "string"
        },
        "receiving_amount": {
          "type": "string",
          "format": "uint64"
        },
        "receiving_token": {
          "type": "string"
        },
        "node_pub_key": {
          "type": "string"
        }
      }
    }
  }
}
